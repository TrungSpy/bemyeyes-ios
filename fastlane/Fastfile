# Customise this file, documentation can be found here:
# https://github.com/krausefx/fastlane#customise-the-fastfile

# Change the syntax highlighting to Ruby

# All lines starting with a # are ignored when running `fastlane`

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "0.5.0"

before_all do
  # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  ENV["BME_APP_TITLE"] = "Be My Eyes – Helping blind see"

  # sh "./customShellScript.sh"

  # cocoapods

  # increment_build_number

  # xctool
end

lane :test do
  # snapshot
end

lane :shtest do
  testy
end

lane :translations do
  projectKey = crowdin_project_key
  Helper.log.info "Update English files on CrowdIn"
  sh "./../Scripts/upload_translations.py #{projectKey} -u"
  Helper.log.info "Add new English files on CrowdIn"
  sh "./../Scripts/upload_translations.py #{projectKey} -a"
  Helper.log.info "Process translations on CrowdIn"
  sh "./../Scripts/export_translations.py #{projectKey}"
  Helper.log.info "Download translations from CrowdIn"
  sh "./../Scripts/update_translations.py -p #{projectKey}"
  Helper.log.info "Update translation keys"
  sh "cd ..
  Scripts/miaw -g -w --no-date -d -o BeMyEyes/Source/"
end

lane :beta_dev do
  ipa({
    scheme: "BeMyEyes Development",
    configuration: "ReleaseDev",
  })
  ENV["BME_APP_TITLE"] = "Be My Eyes – Alpha"
  deliver :skip_deploy, :beta
end

lane :beta_staging do
  ipa({
    scheme: "BeMyEyes Staging",
    configuration: "ReleaseStaging",
  })
  ENV["BME_APP_TITLE"] = "Be My Eyes – Beta"
  deliver :skip_deploy, :beta
end

lane :beta_production do
  ipa({
    scheme: "BeMyEyes",
    configuration: "Release",
  })
  deliver :skip_deploy, :beta
end

lane :production do
  ipa({
    scheme: "BeMyEyes",
    configuration: "Release",
  })
  deliver :skip_deploy, :force
end

lane :inhouse do
  # insert your code here
end

# You can define as many lanes as you want

after_all do |lane|
  # This block is called, only if the executed lane was successful
  # slack({
  #   message: "Successfully deployed new App Update for [App](http://link.com).",
  #   success: true,
  #   channel: 'development'
  # })
  notify "Fastlane finished '#{lane}'" 
end


error do |lane, exception|
  # Something bad happened
end
